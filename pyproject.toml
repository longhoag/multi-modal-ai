[tool.poetry]
name = "multimodal-ai-app"
version = "0.1.0"
description = "Multi-Modal AI Application for Week 2 Final Project"
authors = ["Student <student@example.com>"]
packages = [{include = "src"}]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
torch = "^2.1.0"
torchvision = "^0.16.0"
torchaudio = "^2.1.0"

# Multi-modal ML libraries
transformers = "^4.35.0"
datasets = "^2.14.0"
evaluate = "^0.4.0"
accelerate = "^0.24.0"
timm = "^0.9.0"
albumentations = "^1.3.0"
opencv-python = "^4.8.0"
pillow = "^10.0.0"
scikit-learn = "^1.3.0"
xgboost = "^2.0.0"
lightgbm = "^4.1.0"
pytorch-lightning = "^2.1.0"
torchmetrics = "^1.2.0"

# Optimization and experimentation
optuna = "^3.4.0"
wandb = "^0.16.0"
tensorboard = "^2.14.0"
mlflow = "^2.7.0"

# API and deployment
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
pydantic = "^2.4.0"
streamlit = "^1.28.0"
gradio = "^4.0.0"
sqlalchemy = "^2.0.0"
psycopg2-binary = "^2.9.0"
redis = "^5.0.0"

# Data processing
pandas = "^2.1.0"
numpy = "^1.25.0"
matplotlib = "^3.8.0"
seaborn = "^0.13.0"
plotly = "^5.17.0"
requests = "^2.31.0"
beautifulsoup4 = "^4.12.0"
nltk = "^3.8.0"
spacy = "^3.7.0"
python-multipart = "^0.0.6"
aiofiles = "^23.2.0"
pyyaml = "^6.0.1"

# Model interpretation
shap = "^0.43.0"
lime = "^0.2.0"
captum = "^0.6.0"

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
ipython = "^8.16.0"
pytest = "^7.4.0"
black = "^23.9.0"
flake8 = "^6.1.0"
mypy = "^1.6.0"
pre-commit = "^3.5.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
line-profiler = "^4.1.0"
memory-profiler = "^0.61.0"
py-spy = "^0.3.0"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=html --cov-report=term-missing"

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
